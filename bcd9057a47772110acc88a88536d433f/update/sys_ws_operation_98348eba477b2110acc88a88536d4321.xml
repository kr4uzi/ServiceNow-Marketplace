<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>true</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>webhooks</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

	try {
		const targetType = request.getHeader('X-GitHub-Hook-Installation-Target-Type');
		const eventType = request.getHeader('X-GitHub-Event');
		if (targetType == 'repository' && eventType == 'push') {
			const repositoryID = request.getHeader('X-GitHub-Hook-Installation-Target-ID');
			const appInstallGr = new GlideRecord('x_376096_mpl_application_installation');
			appInstallGr.addQuery('active', true);
			appInstallGr.addQuery('application.github_id', repositoryID);
			appInstallGr.addQuery('update_flow.active', true);
			appInstallGr.addQuery('update_flow.category.name', 'Update Handler');
			appInstallGr.addQuery('service_user.active', true);
			appInstallGr.query();
			while (appInstallGr.next()) {
				const serviceUserGr = appInstallGr.service_user.getRefRecord();
				const updateFlow = appInstallGr.update_flow;
				sn_fd.FlowAPI.getRunner()
					.subflow(updateFlow.sys_scope.scope + '.' + updateFlow.internal_name)
					.inBackground()
					.withInputs({ 'application_installation': appInstallGr, 'user': serviceUserGr })
					.run();
			}
		}
	} catch (e) {
		gs.info('[MPL]webhooks error: ' + e.message + (e.stack ? e.stack : ''));
	}

	response.setStatus(200);

})(request, response);]]></operation_script>
        <operation_uri>/api/x_376096_mpl/git/webhooks</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/webhooks</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>false</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-07-06 20:42:46</sys_created_on>
        <sys_id>98348eba477b2110acc88a88536d4321</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>webhooks</sys_name>
        <sys_package display_value="Marketplace" source="x_376096_mpl">bcd9057a47772110acc88a88536d433f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Marketplace">bcd9057a47772110acc88a88536d433f</sys_scope>
        <sys_update_name>sys_ws_operation_98348eba477b2110acc88a88536d4321</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-07-10 10:48:52</sys_updated_on>
        <web_service_definition display_value="git">14240eba477b2110acc88a88536d43e2</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
