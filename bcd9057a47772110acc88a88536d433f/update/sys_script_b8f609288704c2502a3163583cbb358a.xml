<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_376096_mpl_application_installation</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>MPL App Install - Prepare Installation</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	if (current.customer && current.application && (!current.automatic_update || current.service_user)) {
		const installGr = new GlideRecord('x_376096_mpl_application_installation');
		installGr.addQuery('customer', current.customer);
		installGr.addQuery('application', current.application);
		installGr.setLimit(1);
		installGr.query();
		if (installGr.hasNext()) {
			gs.addErrorMessage('Application already registered for customer!');
			current.setAbortAction(true);
		} else {
			const worker = new GlideScriptedHierarchicalWorker();
			worker.setProgressName('Prepare Application Installation');
			worker.setScriptIncludeName('x_376096_mpl.MPLWorkerUtil');
			worker.setScriptIncludeMethod('prepareAppInstall');
			worker.putMethodArg('appInstallGr', appInstallGr);
			worker.setBackground(true);
			worker.start();
			current.worker_id = worker.getProgressID();
		}
	} else {
		gs.addErrorMessage('Customer and Application are mandatory!');
		current.setAbortAction(true);
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>mkraus6</sys_created_by>
        <sys_created_on>2024-01-26 22:57:51</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>b8f609288704c2502a3163583cbb358a</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>MPL App Install - Prepare Installation</sys_name>
        <sys_overrides/>
        <sys_package display_value="Marketplace" source="x_376096_mpl">bcd9057a47772110acc88a88536d433f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Marketplace">bcd9057a47772110acc88a88536d433f</sys_scope>
        <sys_update_name>sys_script_b8f609288704c2502a3163583cbb358a</sys_update_name>
        <sys_updated_by>mkraus6</sys_updated_by>
        <sys_updated_on>2024-01-26 23:12:28</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=b8f609288704c2502a3163583cbb358a"/>
</record_update>
